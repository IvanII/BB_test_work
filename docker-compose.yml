version: '2'

services:

### Applications Code Container #############################

    applications:
      image: tianon/true
      volumes:
        - ${APPLICATION}:/var/www

### Workspace Utilities Container ###########################

    workspace:
      build:
        context: ./docker/containers/workspace
        dockerfile: "Dockerfile-${PHP_VERSION}"
        args:
          - INSTALL_XDEBUG=false
          - INSTALL_BLACKFIRE=false
          - INSTALL_SOAP=false
          - INSTALL_LDAP=false
          - INSTALL_IMAP=false
          - INSTALL_MONGO=false
          - INSTALL_AMQP=false
          - INSTALL_PHPREDIS=false
          - INSTALL_MSSQL=false
          - INSTALL_NODE=true
          - NPM_REGISTRY=true
          - INSTALL_YARN=false
          - INSTALL_DRUSH=false
          - INSTALL_DRUPAL_CONSOLE=false
          - INSTALL_AEROSPIKE=false
          - COMPOSER_GLOBAL_INSTALL=true
          - COMPOSER_REPO_PACKAGIST=packagist.org
          - INSTALL_WORKSPACE_SSH=false
          - INSTALL_LARAVEL_ENVOY=false
          - INSTALL_LARAVEL_INSTALLER=false
          - INSTALL_DEPLOYER=false
          - INSTALL_PRESTISSIMO=false
          - INSTALL_LINUXBREW=false
          - INSTALL_MC=false
          - INSTALL_SYMFONY=false
          - INSTALL_PYTHON=false
          - INSTALL_IMAGE_OPTIMIZERS=false
          - INSTALL_IMAGEMAGICK=true
          - INSTALL_TERRAFORM=false
          - INSTALL_DUSK_DEPS=false
          - INSTALL_PG_CLIENT=true
          - INSTALL_SWOOLE=false
          - PUID=${WORKSPACE_PUID}
          - PGID=${WORKSPACE_PGID}
          - NODE_VERSION=${WORKSPACE_NODE_VERSION}
          - YARN_VERSION=${WORKSPACE_YARN_VERSION}
          - TZ=${WORKSPACE_TIMEZONE}
          - BLACKFIRE_CLIENT_ID=null
          - BLACKFIRE_CLIENT_TOKEN=null
        dockerfile: "Dockerfile-${PHP_VERSION}"
      volumes_from:
        - applications
      extra_hosts:
        - "dockerhost:${DOCKER_HOST_IP}"
      tty: true
      networks:
        - frontend
        - backend

### PHP-FPM Container #######################################

    php-fpm:
      build:
        context: ./docker/containers/php-fpm
        dockerfile: "Dockerfile-${PHP_VERSION}"
        args:
          - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
          - INSTALL_BLACKFIRE=false
          - INSTALL_SOAP=${PHP_FPM_INSTALL_SOAP}
          - INSTALL_IMAP=${PHP_FPM_INSTALL_IMAP}
          - INSTALL_MONGO=${PHP_FPM_INSTALL_MONGO}
          - INSTALL_AMQP=${PHP_FPM_INSTALL_AMQP}
          - INSTALL_MSSQL=${PHP_FPM_INSTALL_MSSQL}
          - INSTALL_ZIP_ARCHIVE=${PHP_FPM_INSTALL_ZIP_ARCHIVE}
          - INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}
          - INSTALL_GMP=${PHP_FPM_INSTALL_GMP}
          - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
          - INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED}
          - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
          - INSTALL_EXIF=${PHP_FPM_INSTALL_EXIF}
          - INSTALL_AEROSPIKE=${PHP_FPM_INSTALL_AEROSPIKE}
          - INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI}
          - INSTALL_PGSQL=${PHP_FPM_INSTALL_PGSQL}
          - INSTALL_PG_CLIENT=${PHP_FPM_INSTALL_PG_CLIENT}
          - INSTALL_TOKENIZER=${PHP_FPM_INSTALL_TOKENIZER}
          - INSTALL_INTL=${PHP_FPM_INSTALL_INTL}
          - INSTALL_GHOSTSCRIPT=${PHP_FPM_INSTALL_GHOSTSCRIPT}
          - INSTALL_LDAP=${PHP_FPM_INSTALL_LDAP}
          - INSTALL_SWOOLE=${PHP_FPM_INSTALL_SWOOLE}
          - INSTALL_IMAGE_OPTIMIZERS=${PHP_FPM_INSTALL_IMAGE_OPTIMIZERS}
          - INSTALL_IMAGEMAGICK=${PHP_FPM_INSTALL_IMAGEMAGICK}
        dockerfile: "Dockerfile-${PHP_VERSION}"
      volumes_from:
        - applications
      volumes:
        - ./php-fpm/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
      expose:
        - "9000"
      depends_on:
        - workspace
      extra_hosts:
        - "dockerhost:${DOCKER_HOST_IP}"
      environment:
        - PHP_IDE_CONFIG=laradock
      networks:
        - backend

### PHP Worker Container #####################################

    php-worker:
      build:
        context: ./docker/containers/php-worker
        dockerfile: "Dockerfile-70"
        args:
          - INSTALL_PGSQL=true
      volumes_from:
        - applications
      depends_on:
        - workspace
      extra_hosts:
        - "dockerhost:${DOCKER_HOST_IP}"
      networks:
        - backend

### NGINX Server Container ##################################

    nginx:
      build:
        context: ./docker/containers/nginx
        args:
          - PHP_UPSTREAM_CONTAINER=php-fpm
          - PHP_UPSTREAM_PORT=9000
      volumes_from:
        - applications
      volumes:
        - ./logs:/var/log/nginx
        - ./docker/containers/nginx/sites/:/etc/nginx/sites-available
      ports:
        - "${APP_HOST}:${APP_PORT}:80"
        - "${APP_HOST}:${APP_PORT_SECURED}:443"
      depends_on:
        - php-fpm
      networks:
        - frontend
        - backend

### PostgreSQL Container ####################################

    postgres:
      build: ./docker/containers/postgres
      volumes:
        - ${DATA_SAVE_PATH}/postgres/data/:/var/lib/postgresql
        - ${DATA_SAVE_PATH}/postgres/entrypoint:/docker-entrypoint-initdb.d
      ports:
        - "${APP_HOST}:${DB_PORT}:5432"
      environment:
        - POSTGRES_DB=${DB_DATABASE}
        - POSTGRES_USER=${DB_USERNAME}
        - POSTGRES_PASSWORD=${DB_PASSWORD}
      networks:
        - backend

### Adminer Container ####################################

    adminer:
      build:
        context: ./docker/containers/adminer
        args:
          - INSTALL_MSSQL=false
      ports:
        - "${APP_HOST}:${ADMINER_PORT}:8080"
      depends_on:
        - php-fpm
      networks:
        - frontend
        - backend

### Networks Setup ############################################

networks:
  frontend:
    driver: "bridge"
  backend:
    driver: "bridge"

### Volumes Setup #############################################

volumes:
  postgres:
    driver: "local"
  adminer:
    driver: "local"

